{"version":3,"sources":["App.js","serviceWorker.js","index.js","assets/avatar.jpeg"],"names":["App","react_default","a","createElement","className","index_es","duration","pin","triggerHook","progress","dist_index_es","totalProgress","paused","target","staggerFrom","opacity","ease","staggerTo","stagger","to","wrapper","reverse","Card_default","CardContent_default","Typography_default","gutterBottom","variant","component","align","src","avatar","Grid_default","container","spacing","justify","item","xs","direction","IosFingerPrint_default","fontSize","color","beat","MdPin_default","MdCard_default","MdSchool_default","shake","x","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.91e5ea81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Controller, Scene } from 'react-scrollmagic';\nimport { Tween, Timeline } from 'react-gsap';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport avatar from './assets/avatar.jpeg';\nimport Grid from '@material-ui/core/Grid';\nimport IosFingerPrint from 'react-ionicons/lib/IosFingerPrint';\nimport MdPin from 'react-ionicons/lib/MdPin';\nimport MdCard from 'react-ionicons/lib/MdCard';\nimport MdSchool from 'react-ionicons/lib/MdSchool';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n\n      <div className=\"App\">\n\n        <div >\n          <Controller >\n          <Scene\n                duration={1000}\n                pin={true}\n                triggerHook={'onLeave'}\n              >\n                  {(progress) => (\n                    <div>\n                        \n                        <Timeline totalProgress={progress} paused\n                          target={\n                            <div className=\"panel blue\"><span >Hi.</span></div>\n                          }\n                        >\n                          <Tween\n                            staggerFrom={{ \n                              opacity: 0,\n                              ease: 'Expo.easeInOut',\n                            }}\n                            staggerTo={{ opacity: '1' }}\n                            stagger={0.15}\n\n                          />\n                          <Tween\n                            to={{ opacity: '0' }}\n                          />\n                      </Timeline>\n                    </div>\n                  )}\n            </Scene>\n            <Scene      \n                    pin={true}\n                    duration={1000}\n                    triggerHook={'onLeave'}\n\n                  >\n                    <Tween \n                      wrapper={\n                        <div className=\"panel turqoise\" />\n                      }\n                      staggerFrom= {{\n                         opacity: 0,\n                        ease: 'Expo.easeInOut',\n                      }}\n                     \n                      stagger={0.15}\n                    >\n                      <span className=\"text\">I am Jeremiah,</span>\n                    </Tween>\n                    \n            </Scene>\n            <Scene  pin={true}\n                    reverse={true}\n                    duration={1000}\n                    triggerHook={'onLeave'}\n\n                  >\n                    <Tween \n                      wrapper={\n                        <div className=\"panel turqoise\" />\n                      }\n                      staggerFrom= {{\n                         opacity: 0,\n                        ease: 'Expo.easeInOut',\n                      }}\n                      stagger={0.15}\n                    >\n                      <span className=\"text\">and this is my portfolio.</span>\n                    </Tween>\n            </Scene>\n            <Scene\n                duration={1000}\n                pin={true}\n                triggerHook={'onLeave'}\n              >\n                  {(progress) => (\n                    <div>\n                        \n                        <Timeline totalProgress={progress} paused\n                          target={\n                            <div className=\"panel green\">\n                                <Card className=\"card\">\n                                <CardContent>\n                                <Typography gutterBottom variant=\"h4\" component=\"h1\" align=\"left\">\n                                      Stats\n                                    </Typography>\n                                      <img className=\"bavatar\" src={avatar}/>\n                                    \n                                    <Grid container spacing={24} justify=\"center\" >\n                                      <Grid item xs={3} direction=\"row\">\n                                      <div className=\"icons\">\n                                        <IosFingerPrint fontSize=\"20px\" color=\"red\" beat={true} />\n                                      </div>\n                                      </Grid>\n                                      \n                                      <Grid item xs={9} direction=\"row\">\n                                        <div className=\"details\">\n                                        <Typography component=\"p\" align=\"left\" >\n                                          Jeremiah Japhet Dingal\n                                        </Typography>\n                                      </div>\n                                      </Grid>\n                                      <Grid item xs={3} direction=\"row\">\n                                        <div className=\"icons\">\n                                          <MdPin fontSize=\"20px\" color=\"orange\" />\n                                        </div>\n                                      </Grid>\n                                      <Grid item xs={9} direction=\"row\">\n                                        <Typography component=\"p\" align=\"left\" >\n                                          Davao, Philippines\n                                        </Typography>\n                                      </Grid>\n                                      <Grid item xs={3} direction=\"row\">\n                                        <div className=\"icons\">\n                                          <MdCard fontSize=\"20px\" color=\"gray\" />\n                                        </div>\n                                      </Grid>\n                                      <Grid item xs={9} direction=\"row\">\n                                        <Typography component=\"p\" align=\"left\" >\n                                          Licensed Electrical Engineer\n                                        </Typography>\n                                      </Grid>\n                                      <Grid item xs={3} direction=\"row\">\n                                        <div className=\"icons\">\n                                          <MdSchool fontSize=\"20px\" color=\"lightblue\" shake={true}/>\n                                        </div>\n                                      </Grid>\n                                      <Grid item xs={9} direction=\"row\">\n                                        <Typography component=\"p\" align=\"left\" >\n                                          MBA\n                                        </Typography>\n                                      </Grid>\n                                      \n                                    </Grid>\n                                  </CardContent>\n                                </Card>\n                                \n                            \n                            </div>\n                          }\n                        >\n                          <Tween\n                            staggerFrom={{ \n                              x: '-20%',\n                              opacity:'0',\n                              ease: 'Expo.easeInOut',\n                            }}\n                            staggerTo={{ x: '0%', opacity:'1',}}\n                            stagger={0.15}\n\n                          />\n                          <Tween\n                            to={{ x: '20%' ,opacity:'0'}}\n                          />\n                      </Timeline>\n                    </div>\n                  )}\n            </Scene>\n\n            <Scene duration={1000} pin>\n              <div className=\"panel bordeaux\"><span>4</span></div>\n            </Scene>\n          </Controller>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.68fad948.jpeg\";"],"sourceRoot":""}